@page "/create"

@inject EntradasHuacalesService entradasHuacalesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Registrar Entrada</PageTitle>

<EditForm Model="EntradaHuacal" OnValidSubmit="Guardar">
	<DataAnnotationsValidator/>

	<div class="container">
		<div class="card shadow-lg">
			@*Header*@
			<div class="card-header text-center">
				<h5 class="card-title">Registrar Entrada</h5>
			</div>

			@*Body*@
			<div class="card-body">
				<div class="mb-3">
					<label class="form-label"><strong>Fecha</strong></label>
					<InputDate class="form-control" @bind-Value="EntradaHuacal.Fecha" />
					<ValidationMessage For="@(() => EntradaHuacal.Fecha)" />
				</div>

				<div class="mb-3">
					<label class="form-label"><strong>Nombre del Cliente</strong></label>
					<InputText class="form-control" @bind-Value="EntradaHuacal.NombreCliente" />
					<ValidationMessage For="@(() => EntradaHuacal.NombreCliente)" />
				</div>

				<div class="mb-3">
					<label class="form-label"><strong>Cantidad</strong></label>
					<InputNumber class="form-control" @bind-Value="EntradaHuacal.Cantidad" />
					<ValidationMessage For="@(() => EntradaHuacal.Cantidad)"/>
				</div>

				<div class="mb-3">
					<label class="form-label"><strong>Precio</strong></label>
					<InputNumber class="form-control" @bind-Value="EntradaHuacal.Precio" />
					<ValidationMessage For="@(() => EntradaHuacal.Precio)" />
				</div>

				<div class="mb-3">
					<label class="form-label"><strong>Importe</strong></label>
					<input type="number" class="form-control" value="@(EntradaHuacal.Cantidad* EntradaHuacal.Precio)" readonly />
				</div>

				@if (!string.IsNullOrEmpty(AlertMessage))
				{
					<div class="alert alert-@AlertType alert-dismissible fade show" role="alert">
						<div>@AlertMessage</div>
					</div>
				}
			</div>

			@*Footer*@
			<div class="card-footer text-center">
				<div class="btn-group">
					<a href="/" class="btn btn-outline-secondary"><span class="bi bi-arrow-bar-left"/> Volver</a>
					@if(AlertType != "success")
					{
						<button type="submit" class="btn btn-outline-success"><span class="bi bi-check-circle" /> Guardar</button>
					}
				</div>
			</div>
		</div>
	</div>
</EditForm>

@code {
	public EntradasHuacales EntradaHuacal { get; set; } = new EntradasHuacales();
	public string AlertMessage { get; set; }
	public string AlertType { get; set; }

	protected override async Task OnInitializedAsync()
	{
		EntradaHuacal.Fecha = DateTime.Now;
	}

	public async Task Guardar()
	{
		var creado = await entradasHuacalesService.Guardar(EntradaHuacal);
		if (creado)
		{
			AlertMessage = "Jugador creado correctamente.";
			AlertType = "success";
		}
		else
		{
			AlertMessage = "Error al crear el jugador.";
			AlertType = "danger";
		}
	}
}
